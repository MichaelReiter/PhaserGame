// Generated by CoffeeScript 1.10.0
var PlayerVariables, collectStar, player, playerInit, playerMovement, shoot;

player = null;

PlayerVariables = {
  movementSpeed: 150,
  jumpSpeed: 300,
  bulletSpeed: 300,
  playerScale: 1,
  facing: "right",
  fireRate: 3,
  lastFired: 0
};

playerInit = function() {
  player = game.add.sprite(32, game.world.height - 100, 'player');
  player.scale.setTo(PlayerVariables.playerScale, PlayerVariables.playerScale);
  player.smoothed = false;
  player.anchor.setTo(.5, 1);
  game.physics.arcade.enable(player);
  player.body.gravity.y = 300;
  player.body.collideWorldBounds = true;
  player.animations.add('walking', [0, 1, 2, 3, 4, 5], 12, true);
  player.animations.add('jumping', [6, 7, 8, 9], 12, true);
};

playerMovement = function() {
  player.body.velocity.x = 0;
  if (keyboard.left.isDown) {
    PlayerVariables.facing = "left";
    player.body.velocity.x = -PlayerVariables.movementSpeed;
    if (player.body.touching.down) {
      player.animations.play('walking');
    }
    if (player.scale.x > 0) {
      player.scale.x *= -1;
    }
  } else if (keyboard.right.isDown) {
    PlayerVariables.facing = "right";
    player.body.velocity.x = PlayerVariables.movementSpeed;
    if (player.body.touching.down) {
      player.animations.play('walking');
    }
    if (player.scale.x < 0) {
      player.scale.x *= -1;
    }
  } else {
    player.animations.stop();
    player.frame = 6;
  }
  if (player.body.touching.down && keyboard.up.isDown) {
    player.body.velocity.y = -PlayerVariables.jumpSpeed;
    player.animations.play('jumping');
  }
  if ((game.time.now - PlayerVariables.lastFired) > (1000 / PlayerVariables.fireRate) && spacebar.isDown) {
    PlayerVariables.lastFired = game.time.now;
    shoot();
  }
};

shoot = function() {
  var projectile, projectileVector;
  if (PlayerVariables.facing === "right") {
    projectile = bullets.create(player.x + 15, player.y - 24, 'bullet');
    projectileVector = PlayerVariables.bulletSpeed;
  } else {
    projectile = bullets.create(player.x - 20, player.y - 24, 'bullet');
    projectileVector = -PlayerVariables.bulletSpeed;
  }
  projectile.body.velocity.x = projectileVector;
};

collectStar = function(player, star) {
  star.kill();
  score += 10;
  scoreText.text = 'Score: ' + score;
};
